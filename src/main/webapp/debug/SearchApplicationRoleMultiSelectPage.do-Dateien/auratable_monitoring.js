/*
 * Monitors selection events generated by AuraTables. The "continue"
 * button is enabled or disabled as a result. The id of the button
 * is assumed to start with "btn_next"
 *
 * @requires auratable.js
 * @requires auratable_constants.js
 * @requires auratable_registry.js
 */
(function($) {
    var initialiser = function() {
    
    	function getContinueButton() {
    		// TODO make this more flexible
			var continueButton = document.getElementById('btn_next');
			if (! continueButton ) {
				continueButton = document.getElementById('btn_next_Submit');
			}
			if (! continueButton ) {
				continueButton = document.getElementById('btn_next_Next');
			}
			if (! continueButton ) {
				continueButton = document.getElementById('btn_next_next');
			}
			if (! continueButton ) {
				continueButton = document.getElementById('btn_next_finish');
			}
			//TODO use JQuery. continueButton = $("input[id^='btn_next']").first();
    		return continueButton;
    	};

    	/*
    	 * Starts monitoring of selections in AuraTables
    	 */
		function monitorTableSelections() {

	    	$('div.dataTables_wrapper table').live('tableSelectionChanged', function(e) {
	    	
	    	
	    		// identify table
				var closestTable = $(e.target).closest('table');
				if (closestTable.length > 0) {
                    var tables = [];
					var tableParent = closestTable[0];
					var table = AuraTableRegistry.get(tableParent.id);
					if (table) {
                        tables.push(table);
                        var tableIds = table.associatedTableIds;

                        for(var tableId in tableIds) {
                            var associatedTable = AuraTableRegistry.get(tableId);
                            if(associatedTable) {
                                tables.push(table);
                            }
                        }
                    }

					var nextButton = getContinueButton();
                    var hasSelection = false;

                    if(nextButton) {
                        for(var table in tables) {
                            var nodes = table.fnGetNodes();

                            // iterate through nodes
                            for (var i = 0; i < nodes.length; i++) {
                                var tr = nodes[i];
                                var trj = $(tr);

                                hasSelection = hasSelection
                                    || trj.hasClass(AuraTableConstants.selectionClassName);

                                if (hasSelection) {
                                    break;
                                }
                            }

                            if(hasSelection) {
                                break;
                            }
                        }

                        if (hasSelection) {
                            nextButton.disabled = '';
                        } else {
                            nextButton.disabled = 'true';
                        }
                    }
				}
				
				// allow other event handlers to run
				return true;
			});
		};
						
		return {
			init: function() {
				monitorTableSelections();
			}
		};
	}();
	
	// wait for all AuraTables to be initialised
	jQuery(document).ready(function() {
		initialiser.init();
	});
	
})(jQuery);