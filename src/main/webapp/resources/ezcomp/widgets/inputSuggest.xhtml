<ui:component xmlns=""
              xmlns:ui="http://java.sun.com/jsf/facelets"
              xmlns:composite="http://java.sun.com/jsf/composite"
              xmlns:f="http://java.sun.com/jsf/core"
              xmlns:h="http://java.sun.com/jsf/html"
              xmlns:c="http://java.sun.com/jsp/jstl/core">
    <composite:interface componentType="at.irian.InputSuggest">
        <composite:attribute name="model" type="org.extrasapache.myfaces.codi.examples.ebean.support.data.InputSuggestmodel"  required="true"/>

        <composite:attribute name="id" required="true" default=""/>

        <composite:editableValueHolder name="valueHolder"/>

        <composite:attribute name="value" required="true"/>
        <composite:attribute name="label" default=""/>
        <composite:attribute name="labelStyleClass" default=""/>
        <composite:attribute name="inputStyleClass" default=""/>
        <composite:attribute name="messageClass" default=""/>
        <composite:attribute name="selectorIdentifier" default="ul li"/>
        <composite:facet name="suggestArea" />
    </composite:interface>
    <composite:implementation>

        <div id="#{cc.clientId}" class="inputSuggest">
            <!-- we wrap our cc into a div for easier ajaxing from outside -->
            <h:panelGroup layout="inputSuggest block" id="#{cc.attrs.id}">

                <!--
                Now to the input suggest part, the entire input suggest consists
                of three parts, the input area on top with a label, an input field
                and a message field

                the second part is the suggest area with a fillable container
                which is dragged in by the user
                -->

                <h:panelGroup styleClass="inputArea" layout="block">

                    <h:outputLabel  value="#{cc.attrs.label}" for="valueHolder"
                                   styleClass="label #{cc.attrs.labelStyleClass}"/>
                    <h:inputText binding="#{cc.valueHolder}" id="valueHolder" styleClass="inputText #{cc.attrs.inputStyleClass}"
                                 value="#{cc.attrs.model.displayValue}" autocomplete="off">
                         <f:event type="preRenderComponent" listener="#{cc.preRenderInput}" />
                    </h:inputText>
                    <h:message for="valueHolder" styleClass="message #{cc.attrs.messageClass} "/>

                </h:panelGroup>

                <h:panelGroup binding="#{cc.placeHolder}" layout="block" styleClass="suggestArea" id="placeHolder">
                    <f:event type="preRenderComponent" listener="#{cc.preRenderComponentList}" />
                    <h:inputHidden id="lineHolder" value="#{cc.attrs.model.selectedLine}"/>

                    <composite:renderFacet name="suggestArea" />
                </h:panelGroup>

                <script type="text/javascript">
                    var inputSuggest_#{cc.attrs.id} = new extras.apache.InputSuggest({
                        id:"#{cc.clientId}:#{cc.attrs.id}",
                        valueHolderId:"#{cc.clientId}:valueHolder",
                        lineHolderId:"#{cc.clientId}:lineHolder",

                        placeHolderId:"#{cc.clientId}:placeHolder",
                        selectorIdentifier:"#{cc.attrs.selectorIdentifier}",

                        display: function(on) {
                            document.getElementById(this._suggestPart.placeHolderId).style.display = (on)? "":"none";
                        },

                        position: function() {
                            //this._callSuper("postInit", arguments);
                            var offsetInput = document.getElementById(this.valueHolderId).offsetLeft;
                            document.getElementById(this._suggestPart.placeHolderId).style.left = parseInt(offsetInput)+"px";
                        }
                    });

                    //position fixup so that we get the correct order of elements

                </script>
            </h:panelGroup>
        </div>
    </composite:implementation>
</ui:component>