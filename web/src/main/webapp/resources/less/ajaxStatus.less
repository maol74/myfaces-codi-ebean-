/*=================  Less Macros begin ======================*/
/**
macro for the standard transitions
*/
@import "commons.less";

.topLeftZero() {
    left: 0px;
    top: 0px;
}

/**
marker for an initial absolute value
*/
.topLeftZeroAbsolute() {
    position: absolute;
    .topLeftZero;
}



/*=================  Less Macros end ======================*/

.ajaxStatus {
    position: fixed;

    .topLeftZero();
     //BEGIN STATUS AREA
         .statusArea {
            .TRANSPARENT();
    
            .ajaxComplete,
            .ajaxSuccess,
            .ajaxError,
            .ajaxBegin {
                .STANDARD_TRANSITION_IN();
                .topLeftZeroAbsolute();
            }
        }
        //END Status Area
        .statusArea.ajaxComplete .ajaxComplete {
            background-color: yellow;
            .OPAQUE();
        }
    
        .statusArea.ajaxSuccess .ajaxSuccess {
            .BKG(green);
            .TRANSPARENT();
        }
    
        .ajaxStatus .statusArea.ajaxError .ajaxError {
            .BKG(red);
            .TRANSPARENT();
        }
    
        .ajaxStatus .statusArea.ajaxBegin .ajaxBegin {
            .TRANSPARENT();
            .BKG(#99ff99);
        }

      /*we hide subelements if they are not from the same type as our parent type*/
     .statusArea.ajaxComplete {
        .ajaxSuccess,
        .ajaxBegin,
        .ajaxError {
            .TRANSPARENT();
        }
     }
    
     .statusArea.ajaxBegin {
    
        .ajaxSuccess,
        .ajaxComplete,
        .ajaxError {
            .TRANSPARENT();
        }
      }
    
     .statusArea.ajaxSuccess {
            .ajaxBegin,
            .ajaxComplete,
            .ajaxError,
            .ajaxSuccess {
                .OPAQUE();
        }
     }
     
     .statusArea.ajaxError {
            .ajaxComplete,
            .ajaxComplete,
            .ajaxSuccess {
                .TRANSPARENT();
        }
     }
}